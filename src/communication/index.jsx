"use client"

import { useState, useEffect, useContext } from "react"
import { Auth } from "../App.jsx"

function Communication() {
  const [users, setUsers] = useState([])
  const [selectedUser, setselectUser] = useState({ name: "", id: "", email: "", updated_at: "" })

  const [message, setmessage] = useState([])
  const [reply, setreply] = useState(false)
  const { isLoading, setLoader } = useContext(Auth)
  const [ticketData, setTicketData] = useState({
    subject: "",
    messages: [],
    currentMessage: "",
  })
  const [selectedTicket, setSelectedTicket] = useState(null)
  const [messageInput, setMessageInput] = useState("")

  useEffect(() => {
    setLoader(true)

    const fetchUsers = async () => {
      try {
        const response = await fetch("https://sage-admin-backend.vercel.app/ticket_users")

        if (!response.ok) {
          throw new Error("Failed to fetch users")
        }

        const data = await response.json()
        setUsers(data.users.filter((e) => e.role === "end-user").map((e) => e))
        setLoader(false)
      } catch (err) {
        console.error("Error fetching users:", err)
        setLoader(false)
      }
    }

    fetchUsers()
  }, [])

  const fetchTicketChat = async (email, id) => {
    try {
      setLoader(true)
      // const response = await fetch(`https://sage-admin-backend.vercel.app/ticket_chat?email=${email}`)
      const response = await fetch(`https://sage-admin-backend.vercel.app/ticket_c?userId=${id}`)

      if (!response.ok) {
        throw new Error("Failed to fetch ticket chat")
      }

      const data = await response.json()

      if (data.tickets && data.tickets.length > 0) {
        // Get the first ticket for display
        const firstTicket = data.tickets
        // setSelectedTicket(firstTicket[0])
        setSelectedTicket(firstTicket[0]);
        setTicketData({
          subject: firstTicket[0].subject,
          messages: data.tickets,
          currentMessage: firstTicket[0].tickets,
        })
      }

      setLoader(false)
    } catch (err) {
      console.error("Error fetching ticket chat:", err)
      setLoader(false)
    }
  }

  // Function to determine the sender name
  const getSenderName = (ticket) => {
    if (!ticket) return "Agent"

    if (ticket.via && ticket.via.source && ticket.via.source.from && ticket.via.source.from.name) {
      return ticket.via.source.from.name
    }

    return "Agent"
  }

  const formatDate = (timestamp) => {
    if (!timestamp) return "Today"

    const date = new Date(timestamp)
    const today = new Date()
    const yesterday = new Date()
    yesterday.setDate(yesterday.getDate() - 1)

    if (date.toDateString() === today.toDateString()) {
      return "Today"
    } else if (date.toDateString() === yesterday.toDateString()) {
      return "Yesterday"
    } else {
      return date.toLocaleDateString("en-US", {
        month: "short",
        day: "numeric",
      })
    }
  }

  // Format time to show in AM/PM format
  const formatTime = (timestamp) => {
    if (!timestamp) return "08:00AM"

    const date = new Date(timestamp)
    return date
      .toLocaleTimeString("en-US", {
        hour: "2-digit",
        minute: "2-digit",
        hour12: true,
      })
      .replace(" ", "")
  }

  const sendMessage = async () => {
    if (!messageInput.trim() || !selectedTicket) return

    try {
      setLoader(true)
      const ticketId = selectedTicket.ticket_id // Use selected ticket ID or default to 7
      const response = await fetch(
        `https://sage-admin-backend.vercel.app/send_message?ticket_id=${ticketId}&message=${encodeURIComponent(messageInput)}`,
      )

      if (!response.ok) {
        throw new Error("Failed to send message")
      }

      // Refresh ticket chat to show the new message
      if (selectedUser.email || selectedUser.id) {
        await fetchTicketChat(selectedUser.email, selectedUser.id,)
      }

      // Clear the input field
      setMessageInput("")
      setreply(false)
    } catch (err) {
      console.error("Error sending message:", err)
    } finally {
      setLoader(false)
    }
  }

  return (
    <div className="w-[85%] h-full  overflow-scroll flex">
      <div className="w-[30%]  h-full border-r border-r-[#F2F4F7] ">
        <div className="w-full h-fit px-[5%] border-b border-b-[#E4E4E4]">
          <div className="w-full  h-[72.43px] flex items-center mb-4">
            <h1 className="text-[23.3px] font-[700]">Ticketing</h1>
          </div>
          <div className="grow shrink basis-0 h-6 justify-start items-center gap-3 flex">
            <div className=" border-[1px] border-[#E5E7EB] w-[423px] h-[40px] rounded-[8px] flex items-center justify-center">
              <svg
                width="25"
                height="25"
                className="ml-2"
                viewBox="0 0 25 25"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clipPath="url(#clip0_760_130087)">
                  <path
                    d="M11.9754 19.9816C16.3919 19.9816 19.9721 16.4014 19.9721 11.9849C19.9721 7.56849 16.3919 3.98828 11.9754 3.98828C7.55897 3.98828 3.97876 7.56849 3.97876 11.9849C3.97876 16.4014 7.55897 19.9816 11.9754 19.9816Z"
                    fill="white"
                    fillOpacity="0.01"
                  />
                  <path
                    d="M21.9713 21.9808L17.6231 17.6326M19.9721 11.9849C19.9721 16.4014 16.3919 19.9816 11.9754 19.9816C7.55897 19.9816 3.97876 16.4014 3.97876 11.9849C3.97876 7.56849 7.55897 3.98828 11.9754 3.98828C16.3919 3.98828 19.9721 7.56849 19.9721 11.9849Z"
                    stroke="#6C737F"
                    strokeWidth="1.99943"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                </g>
                <defs>
                  <clipPath id="clip0_760_130087">
                    <rect width="23.99" height="23.99" fill="white" transform="translate(0.97998 0.989258)" />
                  </clipPath>
                </defs>
              </svg>
              <input
                type="text"
                placeholder="Search contacts"
                className="w-[90%] pl-2 border-0 outline-0 text-[14px] text-[#6C737F]"
              />
            </div>
          </div>
          <div className="flex gap-2 h-[70px] w-full mt-8">
            <button className="bg-[#EEDCFB] w-[65px] h-[36px] rounded-[8px]">All</button>
            <button className="text-black w-[65px] h-[36px] rounded-[8px] border border-[#E4E4E4]">New</button>
            <button className="text-black w-[84px] h-[36px] rounded-[8px] border border-[#E4E4E4] px-[10px] py-[4px] flex justify-center">
              Resolved
            </button>
          </div>
        </div>
        <div className="w-full h-fit flex flex-col">
          {users?.map((e, index) => (
            <div
              key={index}
              className="w-full h-[76px] flex justify-evenly py-4 cursor-pointer"
              onClick={() => {
              
                fetchTicketChat(e?.email || "", e?.id)
                setselectUser({name: e?.name, id: e?.id, email: e?.email, updated_at: e?.updated_at})
            }}
            >
              <div className="size-[38.209999084472656px] bg-[#FDAFB6] rounded-full flex justify-center items-center">
                {e?.name
                  .split(" ")
                  .map((part) => part.charAt(0))
                  .join("")
                  .toUpperCase()
                  .substring(0, 2)}
              </div>
              <div className="w-[202px] h-[54px] flex flex-col">
                <h2>{e?.name}</h2>
                <div className="w-max h-max flex gap-2.5">
                  <div className="flex items-center gap-0.5">
                    <svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <g clipPath="url(#clip0_817_93557)">
                        <path
                          d="M1.69995 9.96094C1.69995 7.13269 1.69995 5.71819 2.57895 4.83994C3.45795 3.96169 4.8717 3.96094 7.69995 3.96094H10.7C13.5282 3.96094 14.9427 3.96094 15.821 4.83994C16.6992 5.71894 16.7 7.13269 16.7 9.96094V11.4609C16.7 14.2892 16.7 15.7037 15.821 16.5819C14.942 17.4602 13.5282 17.4609 10.7 17.4609H7.69995C4.8717 17.4609 3.4572 17.4609 2.57895 16.5819C1.7007 15.7029 1.69995 14.2892 1.69995 11.4609V9.96094Z"
                          stroke="#6C737F"
                          strokeWidth="1.5"
                        />
                        <path
                          d="M5.44995 3.96094V2.83594M12.95 3.96094V2.83594M2.07495 7.71094H16.325"
                          stroke="#6C737F"
                          strokeWidth="1.5"
                          strokeLinecap="round"
                        />
                        <path
                          d="M13.7 13.7109C13.7 13.9098 13.6209 14.1006 13.4803 14.2413C13.3396 14.3819 13.1489 14.4609 12.95 14.4609C12.751 14.4609 12.5603 14.3819 12.4196 14.2413C12.279 14.1006 12.2 13.9098 12.2 13.7109C12.2 13.512 12.279 13.3213 12.4196 13.1806C12.5603 13.04 12.751 12.9609 12.95 12.9609C13.1489 12.9609 13.3396 13.04 13.4803 13.1806C13.6209 13.3213 13.7 13.512 13.7 13.7109ZM13.7 10.7109C13.7 10.9098 13.6209 11.1006 13.4803 11.2413C13.3396 11.3819 13.1489 11.4609 12.95 11.4609C12.751 11.4609 12.5603 11.3819 12.4196 11.2413C12.279 11.1006 12.2 10.9098 12.2 10.7109C12.2 10.512 12.279 10.3213 12.4196 10.1806C12.5603 10.04 12.751 9.96094 12.95 9.96094C13.1489 9.96094 13.3396 10.04 13.4803 10.1806C13.6209 10.3213 13.7 10.512 13.7 10.7109ZM9.94995 13.7109C9.94995 13.9098 9.87093 14.1006 9.73028 14.2413C9.58963 14.3819 9.39886 14.4609 9.19995 14.4609C9.00104 14.4609 8.81027 14.3819 8.66962 14.2413C8.52897 14.1006 8.44995 13.9098 8.44995 13.7109C8.44995 13.512 8.52897 13.3213 8.66962 13.1806C8.81027 13.04 9.00104 12.9609 9.19995 12.9609C9.39886 12.9609 9.58963 13.04 9.73028 13.1806C9.87093 13.3213 9.94995 13.512 9.94995 13.7109ZM9.94995 10.7109C9.94995 10.9098 9.87093 11.1006 9.73028 11.2413C9.58963 11.3819 9.39886 11.4609 9.19995 11.4609C9.00104 11.4609 8.81027 11.3819 8.66962 11.2413C8.52897 11.1006 8.44995 10.9098 8.44995 10.7109C8.44995 10.512 8.52897 10.3213 8.66962 10.1806C8.81027 10.04 9.00104 9.96094 9.19995 9.96094C9.39886 9.96094 9.58963 10.04 9.73028 10.1806C9.87093 10.3213 9.94995 10.512 9.94995 10.7109ZM6.19995 13.7109C6.19995 13.9098 6.12093 14.1006 5.98028 14.2413C5.83963 14.3819 5.64886 14.4609 5.44995 14.4609C5.25104 14.4609 5.06027 14.3819 4.91962 14.2413C4.77897 14.1006 4.69995 13.9098 4.69995 13.7109C4.69995 13.512 4.77897 13.3213 4.91962 13.1806C5.06027 13.04 5.25104 12.9609 5.44995 12.9609C5.64886 12.9609 5.83963 13.04 5.98028 13.1806C6.12093 13.3213 6.19995 13.512 6.19995 13.7109ZM6.19995 10.7109C6.19995 10.9098 6.12093 11.1006 5.98028 11.2413C5.83963 11.3819 5.64886 11.4609 5.44995 11.4609C5.25104 11.4609 5.06027 11.3819 4.91962 11.2413C4.77897 11.1006 4.69995 10.9098 4.69995 10.7109C4.69995 10.512 4.77897 10.3213 4.91962 10.1806C5.06027 10.04 5.25104 9.96094 5.44995 9.96094C5.64886 9.96094 5.83963 10.04 5.98028 10.1806C6.12093 10.3213 6.19995 10.512 6.19995 10.7109Z"
                          fill="#6C737F"
                        />
                      </g>
                      <defs>
                        <clipPath id="clip0_817_93557">
                          <rect width="18" height="18" fill="white" transform="translate(0.199951 0.960938)" />
                        </clipPath>
                      </defs>
                    </svg>
                    <span>{formatDate(e?.updated_at)}</span>
                  </div>
                  <div className="flex items-center gap-0.5">
                    <svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path
                        d="M9.19995 15.9609C10.7913 15.9609 12.3174 15.3288 13.4426 14.2036C14.5678 13.0784 15.2 11.5522 15.2 9.96094C15.2 8.36964 14.5678 6.84351 13.4426 5.7183C12.3174 4.59308 10.7913 3.96094 9.19995 3.96094C7.60865 3.96094 6.08253 4.59308 4.95731 5.7183C3.83209 6.84351 3.19995 8.36964 3.19995 9.96094C3.19995 11.5522 3.83209 13.0784 4.95731 14.2036C6.08253 15.3288 7.60865 15.9609 9.19995 15.9609ZM9.19995 2.46094C10.1849 2.46094 11.1601 2.65493 12.0701 3.03184C12.98 3.40875 13.8068 3.9612 14.5033 4.65764C15.1997 5.35408 15.7521 6.18087 16.129 7.09081C16.506 8.00075 16.7 8.97602 16.7 9.96094C16.7 11.9501 15.9098 13.8577 14.5033 15.2642C13.0967 16.6708 11.1891 17.4609 9.19995 17.4609C5.05245 17.4609 1.69995 14.0859 1.69995 9.96094C1.69995 7.97181 2.49013 6.06416 3.89665 4.65764C5.30317 3.25111 7.21083 2.46094 9.19995 2.46094ZM9.57495 6.21094V10.1484L12.95 12.1509L12.3875 13.0734L8.44995 10.7109V6.21094H9.57495Z"
                        fill="#6C737F"
                      />
                    </svg>
                    <span>{formatTime(e?.updated_at)}</span>
                  </div>
                </div>
              </div>
              {/* <div className='bg-[#DD0417] size-[24px] rounded-full flex justify-center items-center text-white'>
                                2
                            </div>  */}
            </div>
          ))}
        </div>
      </div>
      <div className="w-full h-max">
        <div className="w-[301.4px] h-[76px] flex justify-evenly py-4 cursor-pointer">
          <div className="size-[38.209999084472656px] bg-[#FDAFB6] rounded-full flex justify-center items-center">
          {selectedUser?.name
                  .split(" ")
                  .map((part) => part.charAt(0))
                  .join("")
                  .toUpperCase()
                  .substring(0, 2)}
          </div>
          <div className="w-[202px] h-[54px] flex flex-col">
            <h2>{selectedUser?.name}</h2>
            <div className="w-max h-max flex gap-2.5">
              <div className="flex items-center gap-0.5">
                <svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <g clipPath="url(#clip0_817_93557)">
                    <path
                      d="M1.69995 9.96094C1.69995 7.13269 1.69995 5.71819 2.57895 4.83994C3.45795 3.96169 4.8717 3.96094 7.69995 3.96094H10.7C13.5282 3.96094 14.9427 3.96094 15.821 4.83994C16.6992 5.71894 16.7 7.13269 16.7 9.96094V11.4609C16.7 14.2892 16.7 15.7037 15.821 16.5819C14.942 17.4602 13.5282 17.4609 10.7 17.4609H7.69995C4.8717 17.4609 3.4572 17.4609 2.57895 16.5819C1.7007 15.7029 1.69995 14.2892 1.69995 11.4609V9.96094Z"
                      stroke="#6C737F"
                      strokeWidth="1.5"
                    />
                    <path
                      d="M5.44995 3.96094V2.83594M12.95 3.96094V2.83594M2.07495 7.71094H16.325"
                      stroke="#6C737F"
                      strokeWidth="1.5"
                      strokeLinecap="round"
                    />
                    <path
                      d="M13.7 13.7109C13.7 13.9098 13.6209 14.1006 13.4803 14.2413C13.3396 14.3819 13.1489 14.4609 12.95 14.4609C12.751 14.4609 12.5603 14.3819 12.4196 14.2413C12.279 14.1006 12.2 13.9098 12.2 13.7109C12.2 13.512 12.279 13.3213 12.4196 13.1806C12.5603 13.04 12.751 12.9609 12.95 12.9609C13.1489 12.9609 13.3396 13.04 13.4803 13.1806C13.6209 13.3213 13.7 13.512 13.7 13.7109ZM13.7 10.7109C13.7 10.9098 13.6209 11.1006 13.4803 11.2413C13.3396 11.3819 13.1489 11.4609 12.95 11.4609C12.751 11.4609 12.5603 11.3819 12.4196 11.2413C12.279 11.1006 12.2 10.9098 12.2 10.7109C12.2 10.512 12.279 10.3213 12.4196 10.1806C12.5603 10.04 12.751 9.96094 12.95 9.96094C13.1489 9.96094 13.3396 10.04 13.4803 10.1806C13.6209 10.3213 13.7 10.512 13.7 10.7109ZM9.94995 13.7109C9.94995 13.9098 9.87093 14.1006 9.73028 14.2413C9.58963 14.3819 9.39886 14.4609 9.19995 14.4609C9.00104 14.4609 8.81027 14.3819 8.66962 14.2413C8.52897 14.1006 8.44995 13.9098 8.44995 13.7109C8.44995 13.512 8.52897 13.3213 8.66962 13.1806C8.81027 13.04 9.00104 12.9609 9.19995 12.9609C9.39886 12.9609 9.58963 13.04 9.73028 13.1806C9.87093 13.3213 9.94995 13.512 9.94995 13.7109ZM9.94995 10.7109C9.94995 10.9098 9.87093 11.1006 9.73028 11.2413C9.58963 11.3819 9.39886 11.4609 9.19995 11.4609C9.00104 11.4609 8.81027 11.3819 8.66962 11.2413C8.52897 11.1006 8.44995 10.9098 8.44995 10.7109C8.44995 10.512 8.52897 10.3213 8.66962 10.1806C8.81027 10.04 9.00104 9.96094 9.19995 9.96094C9.39886 9.96094 9.58963 10.04 9.73028 10.1806C9.87093 10.3213 9.94995 10.512 9.94995 10.7109ZM6.19995 13.7109C6.19995 13.9098 6.12093 14.1006 5.98028 14.2413C5.83963 14.3819 5.64886 14.4609 5.44995 14.4609C5.25104 14.4609 5.06027 14.3819 4.91962 14.2413C4.77897 14.1006 4.69995 13.9098 4.69995 13.7109C4.69995 13.512 4.77897 13.3213 4.91962 13.1806C5.06027 13.04 5.25104 12.9609 5.44995 12.9609C5.64886 12.9609 5.83963 13.04 5.98028 13.1806C6.12093 13.3213 6.19995 13.512 6.19995 13.7109ZM6.19995 10.7109C6.19995 10.9098 6.12093 11.1006 5.98028 11.2413C5.83963 11.3819 5.64886 11.4609 5.44995 11.4609C5.25104 11.4609 5.06027 11.3819 4.91962 11.2413C4.77897 11.1006 4.69995 10.9098 4.69995 10.7109C4.69995 10.512 4.77897 10.3213 4.91962 10.1806C5.06027 10.04 5.25104 9.96094 5.44995 9.96094C5.64886 9.96094 5.83963 10.04 5.98028 10.1806C6.12093 10.3213 6.19995 10.512 6.19995 10.7109Z"
                      fill="#6C737F"
                    />
                  </g>
                  <defs>
                    <clipPath id="clip0_817_93557">
                      <rect width="18" height="18" fill="white" transform="translate(0.199951 0.960938)" />
                    </clipPath>
                  </defs>
                </svg>
                <span>{formatDate(selectedUser?.updated_at)}</span>
              </div>
              <div className="flex items-center gap-0.5">
                <svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path
                    d="M9.19995 15.9609C10.7913 15.9609 12.3174 15.3288 13.4426 14.2036C14.5678 13.0784 15.2 11.5522 15.2 9.96094C15.2 8.36964 14.5678 6.84351 13.4426 5.7183C12.3174 4.59308 10.7913 3.96094 9.19995 3.96094C7.60865 3.96094 6.08253 4.59308 4.95731 5.7183C3.83209 6.84351 3.19995 8.36964 3.19995 9.96094C3.19995 11.5522 3.83209 13.0784 4.95731 14.2036C6.08253 15.3288 7.60865 15.9609 9.19995 15.9609ZM9.19995 2.46094C10.1849 2.46094 11.1601 2.65493 12.0701 3.03184C12.98 3.40875 13.8068 3.9612 14.5033 4.65764C15.1997 5.35408 15.7521 6.18087 16.129 7.09081C16.506 8.00075 16.7 8.97602 16.7 9.96094C16.7 11.9501 15.9098 13.8577 14.5033 15.2642C13.0967 16.6708 11.1891 17.4609 9.19995 17.4609C5.05245 17.4609 1.69995 14.0859 1.69995 9.96094C1.69995 7.97181 2.49013 6.06416 3.89665 4.65764C5.30317 3.25111 7.21083 2.46094 9.19995 2.46094ZM9.57495 6.21094V10.1484L12.95 12.1509L12.3875 13.0734L8.44995 10.7109V6.21094H9.57495Z"
                    fill="#6C737F"
                  />
                </svg>
                <span>{formatTime(selectedUser?.updated_at)}</span>
              </div>
            </div>
          </div>
          {/* <div className='bg-[#DD0417] size-[24px] rounded-full flex justify-center items-center text-white'>
                                2
                            </div>  */}
        </div>
        <div className="w-full px-6 flex justify-between items-center mt-2">
          <div>
            <p>
              <span className="text-[14px] font-[500] ">
                <b>Product:</b>
              </span>{" "}
              {ticketData.subject || "Apple Iphone 15 Pro Max"}
            </p>
            <p>
              <span className="text-[14px] font-[500] ">
                <b>Subject:</b>
              </span>{" "}
              {ticketData.subject || "Complaint Regarding Faulty Product"}
            </p>
          </div>
          <button className="w-[114px] h-[36px] py-[4px] px-[8px] border border-[#DD0417] rounded-[8px]">
            Close Ticket
          </button>
        </div>
        <div className="px-6 mt-8">
            {ticketData.messages.map((e)=>(<>
            
          <h1 className="font-[500] text-[16px] mb-2">
            <b>{getSenderName(e) || "Complaint Regarding Faulty Product"}</b>
          </h1>
          <p className="mb-8">
            {e.message}
          </p>
          </>))}

          {!reply ? (
            <button onClick={() => {
                setreply(true)
              }} className="w-[114px] h-[36px] rounded-[8px]  py-[4px]  px-[8px] bg-[#7217B8] text-white">
              Reply
            </button>
          ) : (
            ""
          )}
        </div>

        {reply ? (
          <div className="w-full flex justify-center mt-8">
            <div className="w-[80%] border-[#F2F4F7] border h-[324px]">
              <div className="w-full h-[10%] flex justify-center items-center gap-[40px] border-b border-b-[#F2F4F7] h-[51.7px]">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path
                    d="M6 3H12.75C13.7138 3.0003 14.659 3.26585 15.4819 3.76756C16.3049 4.26927 16.9739 4.98778 17.4157 5.8444C17.8575 6.70102 18.055 7.6627 17.9866 8.6241C17.9182 9.5855 17.5866 10.5095 17.028 11.295C17.9969 11.8977 18.7429 12.7998 19.1532 13.8646C19.5634 14.9294 19.6154 16.0988 19.3014 17.1959C18.9874 18.2929 18.3244 19.2577 17.4129 19.9441C16.5014 20.6305 15.3911 21.0012 14.25 21H6C5.60218 21 5.22064 20.842 4.93934 20.5607C4.65804 20.2794 4.5 19.8978 4.5 19.5V4.5C4.5 4.10218 4.65804 3.72064 4.93934 3.43934C5.22064 3.15804 5.60218 3 6 3ZM7.5 13.5V18H14.25C14.8467 18 15.419 17.7629 15.841 17.341C16.2629 16.919 16.5 16.3467 16.5 15.75C16.5 15.1533 16.2629 14.581 15.841 14.159C15.419 13.7371 14.8467 13.5 14.25 13.5H7.5ZM12.75 10.5C13.3467 10.5 13.919 10.2629 14.341 9.84099C14.7629 9.41903 15 8.84674 15 8.25C15 7.65326 14.7629 7.08097 14.341 6.65901C13.919 6.23705 13.3467 6 12.75 6H7.5V10.5H12.75Z"
                    fill="#6C737F"
                  />
                </svg>
                <svg width="18" height="24" viewBox="0 0 18 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path
                    d="M6 3C6 2.17031 6.67031 1.5 7.5 1.5H16.5C17.3297 1.5 18 2.17031 18 3C18 3.82969 17.3297 4.5 16.5 4.5H13.7484L7.5 19.5H10.5C11.3297 19.5 12 20.1703 12 21C12 21.8297 11.3297 22.5 10.5 22.5H1.5C0.670312 22.5 0 21.8297 0 21C0 20.1703 0.670312 19.5 1.5 19.5H4.25156L10.5 4.5H7.5C6.67031 4.5 6 3.82969 6 3Z"
                    fill="#6C737F"
                  />
                </svg>

                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path
                    d="M18 18.5C18.3852 18.5002 18.7556 18.6486 19.0344 18.9144C19.3132 19.1802 19.479 19.5431 19.4975 19.9279C19.516 20.3127 19.3858 20.6898 19.1338 20.9812C18.8818 21.2726 18.5274 21.4558 18.144 21.493L18 21.5H5.99999C5.61477 21.4998 5.2444 21.3514 4.9656 21.0856C4.68681 20.8198 4.52098 20.4569 4.50247 20.0721C4.48395 19.6873 4.61418 19.3102 4.86617 19.0188C5.11815 18.7274 5.47257 18.5442 5.85599 18.507L5.99999 18.5H18ZM17 2.5C17.3729 2.50002 17.7324 2.63892 18.0084 2.88962C18.2844 3.14032 18.4572 3.48484 18.493 3.856L18.5 4V11C18.5013 12.7046 17.833 14.3415 16.639 15.5581C15.445 16.7746 13.8208 17.4735 12.1165 17.504C10.4122 17.5346 8.76405 16.8944 7.5272 15.7214C6.29035 14.5485 5.56377 12.9366 5.50399 11.233L5.49999 11V4C5.50018 3.61478 5.64857 3.24441 5.9144 2.96561C6.18023 2.68682 6.54313 2.52099 6.92791 2.50248C7.31268 2.48396 7.68982 2.61419 7.98119 2.86618C8.27256 3.11816 8.45582 3.47258 8.49299 3.856L8.49999 4V11C8.49867 11.9125 8.85378 12.7894 9.48963 13.4439C10.1255 14.0984 10.9918 14.4787 11.904 14.5037C12.8161 14.5288 13.702 14.1966 14.3728 13.578C15.0436 12.9593 15.4463 12.1032 15.495 11.192L15.5 11V4C15.5 3.60218 15.658 3.22064 15.9393 2.93934C16.2206 2.65804 16.6022 2.5 17 2.5Z"
                    fill="#6C737F"
                  />
                </svg>
                <svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path
                    d="M20.5833 13C20.8595 13.0003 21.125 13.106 21.3258 13.2956C21.5266 13.4851 21.6474 13.7442 21.6636 14.0198C21.6798 14.2955 21.5901 14.5669 21.4129 14.7787C21.2357 14.9904 20.9843 15.1265 20.7101 15.1591L20.5833 15.1667H18.2975C18.5337 15.522 18.7207 15.9059 18.8587 16.3183C19.8911 19.4155 17.6573 22.6113 14.4354 22.7457L14.2242 22.75H12.3803C11.2704 22.7499 10.1806 22.4526 9.22433 21.8891C8.26802 21.3256 7.47997 20.5164 6.942 19.5455L6.82067 19.3148L6.6235 18.9193C6.51891 18.7198 6.47915 18.4926 6.50975 18.2693C6.53957 18.0524 6.6344 17.8497 6.78174 17.6878C6.92909 17.5258 7.12203 17.4124 7.33515 17.3623C7.54827 17.3122 7.77157 17.3279 7.97561 17.4072C8.17965 17.4865 8.35487 17.6258 8.47817 17.8068L8.52367 17.8783L8.75875 18.3452C9.07782 18.9827 9.55944 19.5247 10.155 19.9165C10.7505 20.3084 11.4389 20.5361 12.1507 20.5768L12.3803 20.5833H14.2231C14.8175 20.5838 15.3957 20.3894 15.8691 20.03C16.3426 19.6706 16.6852 19.1659 16.8446 18.5933C17.004 18.0206 16.9713 17.4115 16.7516 16.8592C16.532 16.3069 16.1373 15.8417 15.6282 15.535L15.4397 15.431L14.911 15.1667H5.41667C5.14055 15.1664 4.87496 15.0606 4.67418 14.8711C4.4734 14.6815 4.35258 14.4225 4.3364 14.1468C4.32022 13.8712 4.4099 13.5998 4.58712 13.388C4.76434 13.1763 5.01573 13.0402 5.28992 13.0076L5.41667 13H20.5833ZM13.6197 3.25C14.7739 3.2502 15.9053 3.57165 16.8872 4.17836C17.8691 4.78506 18.6627 5.65308 19.1793 6.68525L19.3743 7.0785C19.4829 7.28827 19.5201 7.52773 19.4802 7.76054C19.4404 7.99335 19.3257 8.20682 19.1535 8.36854C18.9814 8.53027 18.7612 8.63144 18.5264 8.6567C18.2915 8.68196 18.0548 8.62993 17.8523 8.5085C17.7149 8.42478 17.598 8.31154 17.5099 8.177L17.472 8.11417L17.2413 7.65483C16.9047 6.98247 16.3877 6.41702 15.7481 6.02174C15.1085 5.62646 14.3716 5.41696 13.6197 5.41667H11.7769C11.1639 5.41606 10.5687 5.62259 10.0879 6.00275C9.60701 6.3829 9.26871 6.91438 9.12784 7.51096C8.98698 8.10753 9.05182 8.7342 9.31184 9.2893C9.57187 9.8444 10.0118 10.2954 10.5603 10.569L13.2557 11.9167H8.68075C7.96562 11.3327 7.43103 10.5577 7.13917 9.68175C6.08617 6.51842 8.44025 3.25 11.7769 3.25H13.6197Z"
                    fill="#6C737F"
                  />
                </svg>

                <svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path
                    d="M9.75 6.5H22.75M14.0833 13H22.75M9.75 19.5H22.75M3.25 8.66667L7.58333 13L3.25 17.3333"
                    stroke="#6C737F"
                    strokeWidth="2"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                </svg>
                <svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path
                    opacity="0.5"
                    d="M22.75 7.58366H3.25002C2.9627 7.58366 2.68715 7.46952 2.48399 7.26636C2.28082 7.06319 2.16669 6.78764 2.16669 6.50033C2.16669 6.21301 2.28082 5.93746 2.48399 5.73429C2.68715 5.53113 2.9627 5.41699 3.25002 5.41699H22.75C23.0373 5.41699 23.3129 5.53113 23.5161 5.73429C23.7192 5.93746 23.8334 6.21301 23.8334 6.50033C23.8334 6.78764 23.7192 7.06319 23.5161 7.26636C23.3129 7.46952 23.0373 7.58366 22.75 7.58366ZM14.0834 11.917H3.25002C2.9627 11.917 2.68715 11.8029 2.48399 11.5997C2.28082 11.3965 2.16669 11.121 2.16669 10.8337C2.16669 10.5463 2.28082 10.2708 2.48399 10.0676C2.68715 9.86446 2.9627 9.75033 3.25002 9.75033H14.0834C14.3707 9.75033 14.6462 9.86446 14.8494 10.0676C15.0525 10.2708 15.1667 10.5463 15.1667 10.8337C15.1667 11.121 15.0525 11.3965 14.8494 11.5997C14.6462 11.8029 14.3707 11.917 14.0834 11.917ZM22.75 20.5837H3.25002C2.9627 20.5837 2.68715 20.4695 2.48399 20.2664C2.28082 20.0632 2.16669 19.7876 2.16669 19.5003C2.16669 19.213 2.28082 18.9375 2.48399 18.7343C2.68715 18.5311 2.9627 18.417 3.25002 18.417H22.75C23.0373 18.417 23.3129 18.5311 23.5161 18.7343C23.7192 18.9375 23.8334 19.213 23.8334 19.5003C23.8334 19.7876 23.7192 20.0632 23.5161 20.2664C23.3129 20.4695 23.0373 20.5837 22.75 20.5837ZM14.0834 16.2503H3.25002C2.9627 16.2503 2.68715 16.1362 2.48399 15.933C2.28082 15.7299 2.16669 15.4543 2.16669 15.167C2.16669 14.8797 2.28082 14.6041 2.48399 14.401C2.68715 14.1978 2.9627 14.0837 3.25002 14.0837H14.0834C14.3707 14.0837 14.6462 14.1978 14.8494 14.401C15.0525 14.6041 15.1667 14.8797 15.1667 15.167C15.1667 15.4543 15.0525 15.7299 14.8494 15.933C14.6462 16.1362 14.3707 16.2503 14.0834 16.2503Z"
                    fill="#6C737F"
                  />
                  <path
                    d="M20.5833 15.8883C20.296 15.8883 20.0205 15.7742 19.8173 15.571C19.6141 15.3679 19.5 15.0923 19.5 14.805V11.1943C19.5001 10.9884 19.5588 10.7868 19.6693 10.6132C19.7798 10.4395 19.9375 10.3009 20.1239 10.2136C20.3103 10.1263 20.5178 10.0939 20.7219 10.1202C20.9261 10.1466 21.1185 10.2305 21.2767 10.3623L23.4433 12.1682C23.5653 12.2698 23.6633 12.3971 23.7306 12.5408C23.798 12.6846 23.8328 12.8414 23.8328 13.0002C23.8328 13.1589 23.798 13.3157 23.7306 13.4595C23.6633 13.6033 23.5653 13.7305 23.4433 13.8322L21.2767 15.6381C21.0819 15.8 20.8366 15.8885 20.5833 15.8883Z"
                    fill="#6C737F"
                  />
                </svg>

                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path
                    d="M5 21C4.45 21 3.97933 20.8043 3.588 20.413C3.19667 20.0217 3.00067 19.5507 3 19V5C3 4.45 3.196 3.97933 3.588 3.588C3.98 3.19667 4.45067 3.00067 5 3H19C19.55 3 20.021 3.196 20.413 3.588C20.805 3.98 21.0007 4.45067 21 5V19C21 19.55 20.8043 20.021 20.413 20.413C20.0217 20.805 19.5507 21.0007 19 21H5ZM5 19H19V5H5V19ZM6 17H18L14.25 12L11.25 16L9 13L6 17Z"
                    fill="#6C737F"
                  />
                </svg>
              </div>
              <div className="w-full h-[70%] px-12 flex ">
                <textarea className="h-full w-full" placeholder="Typing..." onChange={(e) => setMessageInput(e.target.value)} value={messageInput}></textarea>
              </div>
              <div className="w-full h-[10%] flex  items-center px-4 border-t border-t-[#F2F4F7]">
                <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path
                    d="M5.602 19.7998C4.309 19.7998 3.098 19.2448 2.224 18.3598C0.529004 16.6438 0.0570042 13.6488 2.433 11.2438L12.181 1.37376C13.169 0.373759 14.426 -0.0132411 15.629 0.313759C16.812 0.633759 17.78 1.61476 18.097 2.81176C18.419 4.03176 18.038 5.30476 17.051 6.30476L7.728 15.7448C7.196 16.2838 6.594 16.6028 5.99 16.6668C5.391 16.7308 4.82 16.5368 4.42 16.1318C3.696 15.3958 3.592 14.0148 4.798 12.7948L11.346 6.16476C11.615 5.89276 12.051 5.89276 12.32 6.16476C12.589 6.43676 12.589 6.87876 12.32 7.15076L5.771 13.7818C5.205 14.3538 5.153 14.9008 5.394 15.1458C5.5 15.2518 5.66 15.3008 5.845 15.2798C6.128 15.2508 6.451 15.0638 6.754 14.7588L16.077 5.31976C16.717 4.67176 16.962 3.90976 16.767 3.17476C16.6697 2.81525 16.4811 2.487 16.2195 2.2219C15.9579 1.95679 15.6322 1.76383 15.274 1.66176C14.548 1.46476 13.794 1.71376 13.154 2.36176L3.406 12.2318C1.59 14.0708 2.025 16.1878 3.197 17.3748C4.37 18.5618 6.459 19.0038 8.276 17.1628L18.024 7.29276C18.0876 7.22812 18.1634 7.17677 18.247 7.14173C18.3306 7.10668 18.4203 7.08863 18.511 7.08863C18.6017 7.08863 18.6914 7.10668 18.775 7.14173C18.8586 7.17677 18.9344 7.22812 18.998 7.29276C19.1274 7.42442 19.1999 7.60164 19.1999 7.78626C19.1999 7.97087 19.1274 8.1481 18.998 8.27976L9.25 18.1498C8.101 19.3118 6.814 19.7998 5.602 19.7998Z"
                    fill="#6C737F"
                  />
                </svg>
                <div className="w-max mt-4 flex  h-full ml-auto">
                  <button
                    type="button"
                    onClick={() => {
                      setreply(false)
                    }}
                    className="px-6 py-2.5 border border-gray-300 rounded-md text-gray-700 flex justify-center items-center hover:bg-gray-50 mr-2 cursor-pointer"
                  >
                    Cancel
                  </button>
                  <button
                  onClick={sendMessage}
                    type="submit"
                    className="px-6 py-2.5 bg-[#7217B8] text-white rounded-md hover:bg-[#6215a0] focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 disabled:opacity-70 flex items-center justify-center"
                  >
                  {isLoading ? "Sending..." : "Send"}
                  </button>
                </div>
                <div></div>
              </div>
            </div>
          </div>
        ) : (
          ""
        )}
      </div>
    </div>
  )
}

export default Communication

